spec "CodeReviewExpert" v1.0 {
  description: "AI-powered code review expert with multi-language analysis, security scanning, and intelligent feedback generation for comprehensive PR evaluation."

  inputs:
    review_id: string
    repository_name: string
    pr_number: int
    target_branch: string { default: "main" }
    source_branch: string
    
    review_scope: string { default: "comprehensive" }
    languages_detected: string
    file_count: int { default: 0 }
    lines_changed: int { default: 0 }
    
    security_scan_enabled: bool { default: true }
    performance_analysis: bool { default: true }
    code_quality_check: bool { default: true }
    style_guide_enforcement: bool { default: true }
    
    ai_models: string
    static_analysis_tools: string
    security_scanners: string
    
    review_priority: string { default: "normal" }
    automated_fixes: bool { default: false }
    learning_mode: bool { default: true }
    
    compliance_checks: bool { default: true }
    documentation_review: bool { default: true }
    test_coverage_analysis: bool { default: true }
    dependency_audit: bool { default: true }

  computed:
    review_complexity: -> calculate_complexity()
    estimated_review_time: -> estimate_time()
    risk_assessment: -> assess_risk()
    
  events:
    on_create(review): initialize_code_review
    on_analysis_complete(static): generate_feedback
    on_security_scan_complete(results): process_security_findings
    on_quality_check_complete(metrics): evaluate_code_quality
    on_error(analysis_failure): handle_review_error

  actions:
    initialize_code_review {
      description: "Initialize comprehensive code review process"
      mcp_call: "code_review/initialize"
      parameters: {
        review_id: review_id,
        repository_name: repository_name,
        pr_number: pr_number,
        target_branch: target_branch,
        source_branch: source_branch,
        review_scope: review_scope
      }
    }

    generate_feedback {
      description: "Generate intelligent code review feedback"
      mcp_call: "code_review/generate_feedback"
      parameters: {
        review_id: review_id,
        languages_detected: languages_detected,
        review_complexity: review_complexity,
        ai_models: ai_models
      }
    }

    process_security_findings {
      description: "Process and prioritize security scan results"
      mcp_call: "code_review/security_analysis"
      parameters: {
        review_id: review_id,
        security_scan_enabled: security_scan_enabled,
        risk_assessment: risk_assessment
      }
    }

    evaluate_code_quality {
      description: "Evaluate code quality metrics and standards"
      mcp_call: "code_review/quality_evaluation"
      parameters: {
        review_id: review_id,
        code_quality_check: code_quality_check,
        style_guide_enforcement: style_guide_enforcement
      }
    }

    handle_review_error {
      description: "Handle code review analysis errors"
      mcp_call: "code_review/error_handling"
      parameters: {
        review_id: review_id,
        error_type: "analysis_failure"
      }
    }
}
